
Intervalometer.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000000e0  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .bss          00000002  00800060  00800060  00000154  2**0
                  ALLOC
  2 .comment      00000030  00000000  00000000  00000154  2**0
                  CONTENTS, READONLY
  3 .debug_aranges 00000028  00000000  00000000  00000184  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   00000143  00000000  00000000  000001ac  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 000000e7  00000000  00000000  000002ef  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   000002fc  00000000  00000000  000003d6  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  00000048  00000000  00000000  000006d4  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    00005e95  00000000  00000000  0000071c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    00000091  00000000  00000000  000065b1  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000018  00000000  00000000  00006642  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_macro  0000022f  00000000  00000000  0000665a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	29 c0       	rjmp	.+82     	; 0x54 <__ctors_end>
   2:	00 00       	nop
   4:	37 c0       	rjmp	.+110    	; 0x74 <__bad_interrupt>
   6:	00 00       	nop
   8:	35 c0       	rjmp	.+106    	; 0x74 <__bad_interrupt>
   a:	00 00       	nop
   c:	33 c0       	rjmp	.+102    	; 0x74 <__bad_interrupt>
   e:	00 00       	nop
  10:	31 c0       	rjmp	.+98     	; 0x74 <__bad_interrupt>
  12:	00 00       	nop
  14:	2f c0       	rjmp	.+94     	; 0x74 <__bad_interrupt>
  16:	00 00       	nop
  18:	2d c0       	rjmp	.+90     	; 0x74 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	39 c0       	rjmp	.+114    	; 0x90 <__vector_7>
  1e:	00 00       	nop
  20:	29 c0       	rjmp	.+82     	; 0x74 <__bad_interrupt>
  22:	00 00       	nop
  24:	27 c0       	rjmp	.+78     	; 0x74 <__bad_interrupt>
  26:	00 00       	nop
  28:	25 c0       	rjmp	.+74     	; 0x74 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	23 c0       	rjmp	.+70     	; 0x74 <__bad_interrupt>
  2e:	00 00       	nop
  30:	21 c0       	rjmp	.+66     	; 0x74 <__bad_interrupt>
  32:	00 00       	nop
  34:	1f c0       	rjmp	.+62     	; 0x74 <__bad_interrupt>
  36:	00 00       	nop
  38:	1d c0       	rjmp	.+58     	; 0x74 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	1b c0       	rjmp	.+54     	; 0x74 <__bad_interrupt>
  3e:	00 00       	nop
  40:	19 c0       	rjmp	.+50     	; 0x74 <__bad_interrupt>
  42:	00 00       	nop
  44:	17 c0       	rjmp	.+46     	; 0x74 <__bad_interrupt>
  46:	00 00       	nop
  48:	15 c0       	rjmp	.+42     	; 0x74 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	13 c0       	rjmp	.+38     	; 0x74 <__bad_interrupt>
  4e:	00 00       	nop
  50:	11 c0       	rjmp	.+34     	; 0x74 <__bad_interrupt>
	...

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_clear_bss>:
  60:	20 e0       	ldi	r18, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	01 c0       	rjmp	.+2      	; 0x6a <.do_clear_bss_start>

00000068 <.do_clear_bss_loop>:
  68:	1d 92       	st	X+, r1

0000006a <.do_clear_bss_start>:
  6a:	a2 36       	cpi	r26, 0x62	; 98
  6c:	b2 07       	cpc	r27, r18
  6e:	e1 f7       	brne	.-8      	; 0x68 <.do_clear_bss_loop>
  70:	02 d0       	rcall	.+4      	; 0x76 <main>
  72:	34 c0       	rjmp	.+104    	; 0xdc <_exit>

00000074 <__bad_interrupt>:
  74:	c5 cf       	rjmp	.-118    	; 0x0 <__vectors>

00000076 <main>:

int count = 0;

int main (void)
{
	DDRC |= 1<<PINC0;
  76:	a0 9a       	sbi	0x14, 0	; 20
	
	TCCR1B |= 1<<CS10 | 1<<CS12 | 1<<WGM12;
  78:	8e b5       	in	r24, 0x2e	; 46
  7a:	8d 60       	ori	r24, 0x0D	; 13
  7c:	8e bd       	out	0x2e, r24	; 46
	OCR1A = 487;
  7e:	87 ee       	ldi	r24, 0xE7	; 231
  80:	91 e0       	ldi	r25, 0x01	; 1
  82:	9b bd       	out	0x2b, r25	; 43
  84:	8a bd       	out	0x2a, r24	; 42
	
	TIMSK |= 1<<OCIE1A;
  86:	89 b7       	in	r24, 0x39	; 57
  88:	80 61       	ori	r24, 0x10	; 16
  8a:	89 bf       	out	0x39, r24	; 57
	
	sei();
  8c:	78 94       	sei
  8e:	ff cf       	rjmp	.-2      	; 0x8e <main+0x18>

00000090 <__vector_7>:
	{
	}
}
	
ISR(TIMER1_COMPA_vect)
{
  90:	1f 92       	push	r1
  92:	0f 92       	push	r0
  94:	0f b6       	in	r0, 0x3f	; 63
  96:	0f 92       	push	r0
  98:	11 24       	eor	r1, r1
  9a:	8f 93       	push	r24
  9c:	9f 93       	push	r25
	count++;
  9e:	80 91 60 00 	lds	r24, 0x0060
  a2:	90 91 61 00 	lds	r25, 0x0061
  a6:	01 96       	adiw	r24, 0x01	; 1
  a8:	90 93 61 00 	sts	0x0061, r25
  ac:	80 93 60 00 	sts	0x0060, r24
	if (count>=5) {
  b0:	05 97       	sbiw	r24, 0x05	; 5
  b2:	6c f0       	brlt	.+26     	; 0xce <__vector_7+0x3e>
		PORTC |= 1<<PINC0;
  b4:	a8 9a       	sbi	0x15, 0	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  b6:	87 ea       	ldi	r24, 0xA7	; 167
  b8:	91 e6       	ldi	r25, 0x61	; 97
  ba:	01 97       	sbiw	r24, 0x01	; 1
  bc:	f1 f7       	brne	.-4      	; 0xba <__vector_7+0x2a>
  be:	00 c0       	rjmp	.+0      	; 0xc0 <__vector_7+0x30>
  c0:	00 00       	nop
		_delay_ms(100);
		PORTC &= !(1<<PINC0);
  c2:	85 b3       	in	r24, 0x15	; 21
  c4:	15 ba       	out	0x15, r1	; 21
		count = 0;
  c6:	10 92 61 00 	sts	0x0061, r1
  ca:	10 92 60 00 	sts	0x0060, r1
	}
}
  ce:	9f 91       	pop	r25
  d0:	8f 91       	pop	r24
  d2:	0f 90       	pop	r0
  d4:	0f be       	out	0x3f, r0	; 63
  d6:	0f 90       	pop	r0
  d8:	1f 90       	pop	r1
  da:	18 95       	reti

000000dc <_exit>:
  dc:	f8 94       	cli

000000de <__stop_program>:
  de:	ff cf       	rjmp	.-2      	; 0xde <__stop_program>
